
substitutions:
  device_name: energie_wasmachine
  # Higher value gives lower watt readout
  current_res: "0.00221"
  # Lower value gives lower voltage readout
  voltage_div: "955"

esphome:
  name: ${device_name}
  platform: ESP8266
  board: esp8285

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass
  power_save_mode: none

captive_portal:

# Enable logging
logger:

# Webserver
web_server:
  port: 80

# Enable Home Assistant API
api:
  password: !secret wifi_pass

ota:
  password: !secret wifi_pass


time:
  - platform: homeassistant
    id: homeassistant_time
    
binary_sensor:
  - platform: gpio
    name: "${device_name} Button" 
    pin:
      number: GPIO3
      mode: INPUT_PULLUP
      inverted: True
    on_press:
      - switch.toggle: relay
  - platform: status
    name: "${device_name} Status"


switch:
- platform: gpio
  id: relay
  name: "${device_name} Relay"
  pin: GPIO14
  restore_mode: ALWAYS_ON
  on_turn_on:
    - switch.turn_on: red_led
  on_turn_off:
    - switch.turn_off: red_led
    
- platform: gpio
  id: blue_led
  name: "${device_name} LED Blue"
  pin: GPIO1
  inverted: True
  restore_mode: ALWAYS_OFF
- platform: gpio
  id: red_led
  name: "${device_name} LED Red"
  pin: GPIO13
  inverted: True
  restore_mode: ALWAYS_ON
sensor:
  - platform: wifi_signal
    name: '${device_name} WiFi Signal'
    update_interval: 300s

  - platform: hlw8012
    sel_pin:
      number: GPIO12
      inverted: True
    cf_pin: GPIO04
    cf1_pin: GPIO05
    current_resistor: ${current_res} 
    voltage_divider: ${voltage_div} 
    current:
      name: "${device_name} Current"
      unit_of_measurement: A
    voltage:
      name: "${device_name} Voltage"
      unit_of_measurement: V
    power:
      name: "${device_name} Power"
      unit_of_measurement: W
      id: "${device_name}_Power"
    change_mode_every: 8
    update_interval: 10s
  - platform: total_daily_energy
    name: "${device_name} Daily Energy"
    power_id: "${device_name}_Power" 
    filters:
        # Multiplication factor from W to kW is 0.001
        - multiply: 0.001
    unit_of_measurement: kWh
      
# Extra sensor to keep track of plug uptime
  - platform: uptime
    name: "${device_name} Uptime Sensor" 